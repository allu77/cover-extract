#!/bin/bash

#    cover-extract
#    Copyright (C) 2013 iuk (http://www.iukonline.com/)
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


UNRAR=/usr/bin/unrar-nonfree
UNZIP=/usr/bin/unzip
TMPDIR=/tmp

IMGEXT="bmp gif jpg png"
NOCOLOR=0

# Usage: color shade
function color {
	# Are we in Cron?
	if [ ! -t 0 -o $NOCOLOR = 1 ]; then return 1; fi
	case $1 in
		off|OFF)       echo -n '[0m';;
		red|RED)       echo -n '[1;31m';;
		yellow|YELLOW) echo -n '[1;33m';;
		green|GREEN)   echo -n '[1;32m';;
		blue|BLUE)     echo -n '[1;34m';;
		bell|BELL)     echo -n '';;
		*)             ;;
	esac
}

# Usage: error "String to display"
error() {
	color BELL;color RED
	printf "%s: %s\n" $"ERROR" "$1" >&2
	color OFF
}

# Usage: warning "String to display"
warning() {
	color YELLOW
	printf "%s: %s\n" $"WARNING" "$1"
	color OFF
}

info() {
	color BLUE
	printf "%s: %s\n" $"INFO" "$1"
	color OFF
}


infile="$1"
filename="${infile##*/}"
filepath="${infile%/*}"
fileext="${infile##*.}"
filebase="${filename%.*}"

if [ "$filepath" == "$infile" ]; then
	filepath="."
fi

echo -n "Checking file "; color YELLOW; echo "$infile"; color OFF

for tryext in $IMGEXT; do
	if [ -e "$filepath/$filebase.$tryext" ]; then
		echo -n "An external cover file already exists ("; color GREEN; echo -n "$filepath/$filebase.$tryext"; color OFF; echo "). Skipping cover generation."
		exit 0
	fi
done

filelist=""
if [ "$fileext" == "cbr" ]; then
	filelist=$($UNRAR vb "$infile" | LC_ALL=C sort)
else 
	if [ "$fileext" == "cbz" ]; then
		filelist=$($UNZIP -l "$infile" | cut -c 31- | head -n -2 | tail -n +4 | LC_ALL=C sort)
	else
		error "Unknown extension $fileext"
		exit 1
	fi
fi

oldIFS=$IFS
IFS=$'\n'

cover_found=0

for file in $filelist; do
	IFS=$oldIFS
	echo -n "Checking file "; color YELLOW; echo -n "$file"; color OFF; echo -n "..."
	filetryext="${file##*.}"

	is_img=0
	for tryext in $IMGEXT; do
		if [ "$tryext" == "$filetryext" ]; then
			is_img=1
		fi
	done

	if [ "$is_img" -gt 0 ]; then
		color GREEN; echo " Cover found!"; color OFF
		cover_found=1
		if [ "$fileext" == "cbr" ]; then
			$UNRAR e -y "$infile" "$file" "$TMPDIR"
		else
			$UNZIP -o -j -d "$TMPDIR" "$infile" "$file"
		fi
		outfile=$TMPDIR/${file##*/}

		if [ ! -e "$outfile" ]; then
			error "Cover file $outfile not found!"
			exit 1
		fi
		echo -n "Moving file to destination folder ($outfile -> $filepath/$filebase.${file##*.})..."
		if mv -f "$outfile" "$filepath/$filebase.${file##*.}" > /dev/null 2>&1; then
			color GREEN; echo " Done!"; color OFF
			exit 0
		fi
		color RED; echo " Failed!"; color OFF
		exit 1
	else
		echo " Skipping"
	fi

done
IFS=$oldIFS

if [ "$cover_found" -eq 0 ]; then
	error "Can't extract cover from file $infile"
	exit 1
fi


